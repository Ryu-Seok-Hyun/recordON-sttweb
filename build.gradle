plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sttweb'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// 서블릿 API (컴파일 타임)
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

	// Spring Web (내장 톰캣 제외)
	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	// JPA, Security, Thymeleaf 등
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Validation, Lombok, MariaDB
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.mariadb.jdbc:mariadb-java-client:2.7.5'

	// AOP, Mail, Jasypt
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	implementation 'org.jasypt:jasypt:1.9.3'

	// 기타
	implementation 'jakarta.annotation:jakarta.annotation-api'
	implementation 'org.xerial:sqlite-jdbc:3.45.3.0'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

springBoot {
	mainClass = 'com.sttweb.sttweb.SttwebApplication'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.compilerArgs += ['-parameters']
}

// 1) 내장 jar/bootable WAR 모두 비활성화
bootJar {
	enabled = false
}
bootWar {
	enabled = false
}

// 2) 순수 WAR 하나만 활성화
war {
	enabled = true
	archiveClassifier = ''
	archiveFileName = 'ROOT.war'
}
